"""Test migration

Revision ID: bc6d8df1518b
Revises: 
Create Date: 2024-09-13 22:10:12.722726

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bc6d8df1518b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employee',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_employee_id'), 'employee', ['id'], unique=True)
    op.create_table('organization',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', postgresql.ENUM('IE', 'LLC', 'JSC', name='organization_type'), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organization_id'), 'organization', ['id'], unique=True)
    op.create_table('organization_responsible',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['employee.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organization_responsible_id'), 'organization_responsible', ['id'], unique=True)
    op.create_table('tenders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('status', sa.Enum('Created', 'Published', 'Closed', name='tenderstatus'), nullable=False),
    sa.Column('service_type', sa.Enum('Construction', 'Delivery', 'Manufacture', name='tenderservicetype'), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('creator_username', sa.String(length=50), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['creator_username'], ['employee.username'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tenders_id'), 'tenders', ['id'], unique=True)
    op.create_table('tenders_archives',
    sa.Column('archive_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('status', sa.Enum('Created', 'Published', 'Closed', name='tenderstatus'), nullable=False),
    sa.Column('service_type', sa.Enum('Construction', 'Delivery', 'Manufacture', name='tenderservicetype'), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('creator_username', sa.String(length=50), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['creator_username'], ['employee.username'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('archive_id')
    )
    op.create_index(op.f('ix_tenders_archives_archive_id'), 'tenders_archives', ['archive_id'], unique=True)
    op.create_index(op.f('ix_tenders_archives_id'), 'tenders_archives', ['id'], unique=False)
    op.create_table('bids',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('status', sa.Enum('Created', 'Published', 'Canceled', name='bidstatus'), nullable=False),
    sa.Column('tender_id', sa.UUID(), nullable=False),
    sa.Column('author_type', sa.Enum('Organization', 'User', name='authortype'), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('decision_status', sa.Enum('Approved', 'Rejected', 'Pending', name='decisionstatus'), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['tender_id'], ['tenders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bids_id'), 'bids', ['id'], unique=True)
    op.create_table('bids_archives',
    sa.Column('archive_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('status', sa.Enum('Created', 'Published', 'Canceled', name='bidstatus'), nullable=False),
    sa.Column('tender_id', sa.UUID(), nullable=False),
    sa.Column('author_type', sa.Enum('Organization', 'User', name='authortype'), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('decision_status', sa.Enum('Approved', 'Rejected', 'Pending', name='decisionstatus'), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['tender_id'], ['tenders.id'], ),
    sa.PrimaryKeyConstraint('archive_id')
    )
    op.create_index(op.f('ix_bids_archives_archive_id'), 'bids_archives', ['archive_id'], unique=True)
    op.create_index(op.f('ix_bids_archives_id'), 'bids_archives', ['id'], unique=False)
    op.create_table('feedbacks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('bid_id', sa.UUID(), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bid_id'], ['bids.id'], ),
    sa.ForeignKeyConstraint(['username'], ['employee.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feedbacks_id'), 'feedbacks', ['id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_feedbacks_id'), table_name='feedbacks')
    op.drop_table('feedbacks')
    op.drop_index(op.f('ix_bids_archives_id'), table_name='bids_archives')
    op.drop_index(op.f('ix_bids_archives_archive_id'), table_name='bids_archives')
    op.drop_table('bids_archives')
    op.drop_index(op.f('ix_bids_id'), table_name='bids')
    op.drop_table('bids')
    op.drop_index(op.f('ix_tenders_archives_id'), table_name='tenders_archives')
    op.drop_index(op.f('ix_tenders_archives_archive_id'), table_name='tenders_archives')
    op.drop_table('tenders_archives')
    op.drop_index(op.f('ix_tenders_id'), table_name='tenders')
    op.drop_table('tenders')
    op.drop_index(op.f('ix_organization_responsible_id'), table_name='organization_responsible')
    op.drop_table('organization_responsible')
    op.drop_index(op.f('ix_organization_id'), table_name='organization')
    op.drop_table('organization')
    op.drop_index(op.f('ix_employee_id'), table_name='employee')
    op.drop_table('employee')
    # ### end Alembic commands ###
